# import numpy as np
# from numpy import sqrt, sin, cos, tan, log10, exp
# from numpy import pi
# import matplotlib.pyplot as plt
# from scipy.optimize import fsolve
#
#
# AoA_data = np.array([-25, -24, -23, -22, -21, -20, -19, -18, -17, -16, -15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25])
# Cl_data = np.array([-0.7914, -0.7656, -0.7438, -0.8257, -0.9982, -1.5303, -1.549, -1.4952, -1.4451, -1.3634, -1.2638, -1.1549, -1.0418, -0.9262, -0.8119, -0.6944, -0.5748, -0.4569, -0.3373, -0.218, -0.0992, 0.0207, 0.1407, 0.2604, 0.3806, 0.5012, 0.6199, 0.7389, 0.8554, 0.9684, 1.0796, 1.1852, 1.2805, 1.3788, 1.4563, 1.534, 1.6072, 1.6734, 1.7353, 1.786, 1.8251, 1.8636, 1.8816, 1.8845, 1.8917, 1.8754, 1.8385, 1.7967, 1.7769, 1.7598, 1.726])
# Cd_data = np.array([0.22217, 0.20999, 0.19686, 0.16389, 0.12075, 0.0391, 0.02511, 0.01948, 0.01666, 0.01432, 0.01265, 0.01152, 0.01059, 0.00976, 0.00886, 0.00821, 0.00776, 0.00724, 0.00696, 0.00664, 0.00646, 0.00628, 0.00615, 0.00606, 0.00597, 0.00587, 0.00589, 0.00591, 0.00601, 0.00611, 0.00637, 0.00686, 0.00744, 0.00854, 0.00988, 0.0114, 0.01324, 0.01556, 0.01846, 0.0223, 0.02755, 0.03345, 0.04175, 0.05192, 0.0622, 0.07519, 0.09115, 0.10794, 0.12253, 0.13694, 0.15378])
# Cm_data = np.array([0.0037, -0.0057, -0.0152, -0.0362, -0.0642, -0.1209, -0.1288, -0.1292, -0.1207, -0.1152, -0.1116, -0.1091, -0.1072, -0.1058, -0.1045, -0.1037, -0.1034, -0.103, -0.103, -0.103, -0.1032, -0.1036, -0.1041, -0.1047, -0.1054, -0.1063, -0.1068, -0.1075, -0.1078, -0.1075, -0.1068, -0.105, -0.1009, -0.098, -0.091, -0.0846, -0.0782, -0.0714, -0.065, -0.0585, -0.0523, -0.0476, -0.0433, -0.0399, -0.0379, -0.037, -0.0378, -0.0404, -0.044, -0.0489, -0.0564])
#
# plt.plot(Cd_data, Cl_data)
# plt.title('Cl vs Cd')
# plt.xlabel('Cd')
# plt.ylabel('Cl')
# plt.show()
#
# plt.plot(Cd_data, Cl_data)
# plt.title('Cl vs Cd')
# plt.xlabel('Cd')
# plt.ylabel('Cl')
# plt.show()
#
# plt.plot(Cd_data, Cl_data)
# plt.title('Cl vs Cd')
# plt.xlabel('Cd')
# plt.ylabel('Cl')
# plt.show()
#

#
# def func(x):
#     return m_data * x + b_data
#
# AoA_data_update = np.array([-15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])
# Cl_data_update = np.array([-1.2097, -1.1052, -0.9994, -0.8918, -0.7800, -0.6669, -0.5532, -0.4392, -0.3239, -0.2087, -0.0934, 0.0227, 0.1391, 0.2555, 0.3721, 0.4883, 0.6051, 0.7208, 0.8339, 0.9439, 1.0510, 1.1498, 1.2538, 1.3481, 1.4409, 1.5218, 1.5969, 1.6693, 1.7379, 1.7943, 1.8495])
# m_data, b_data = np.polyfit(AoA_data_update, Cl_data_update, 1)
# root = fsolve(func, [-10, 0])
# alphastall_data = (max(Cl_data) - b_data) / m_data
# plt.plot(AoA_data, Cl_data)
# plt.plot(AoA_data, m_data * AoA_data + b_data)
# plt.title('Cl vs Alpha')
# plt.xlabel('Alpha')
# plt.ylabel('Cl')
# plt.grid(True)
# plt.show()


